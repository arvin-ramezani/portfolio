{"about_text_1":"من آروین رمضانی هستم. 30 ساله ساکن بابلسر، مازندران، ایران.","about_text_2":"یادگیری توسعه وب را در شهریور 1399 با آموزش های آنلاین فارسی و یوتیوب شروع کردم و پس از آن دانش خود را از طریق دوره های آنلاین Udemy و به خصوص دوره های Academind گسترش دادم.","about_text_3":"هدف من تبدیل شدن به توسعه‌دهنده فول استک در زمینه جاوااسکریپت و تایپ‌اسکریپت است.","about_title":"درباره ی  من","course_chatgpt_learned_1":"ChatGPT چگونه ایجاد شده است و چگونه کار می کند؟","course_chatgpt_learned_10":"ساخت ابزارهای هوش مصنوعی خودکار با استفاده از AutoGPT و LangChain","course_chatgpt_learned_2":"ویژگی ها و محدودیت های chtgpt چیست؟","course_chatgpt_learned_3":"درک توکن ها","course_chatgpt_learned_4":"توهمات ChatGPT","course_chatgpt_learned_5":"مهندسی پرامپت","course_chatgpt_learned_6":"استفاده از ChatGPT برای استفاده ی سودمند و ایجاد محتوا","course_chatgpt_learned_7":"پروژه عملی تولید محتوا با استفاده از Chatgpt و Midjourney","course_chatgpt_learned_8":"استفاده از ChatGPT برای برنامه نویسی توسعه وب","course_chatgpt_learned_9":"چگونه از API های GPT استفاده کنیم؟","course_clean_code_learned_1":"اختصاص نام های خوب برای متغیرها، توابع، کلاس ها","course_clean_code_learned_2":"ساختار کد، کامنت ها و قالب بندی","course_clean_code_learned_3":"نحوه نوشتن تمیز توابع (پارامترها - طول تابع و سطوح انتزاع و تقسیم توابع)","course_clean_code_learned_4":"چگونه از ساختارهای کنترل عمیق تو در تو اجتناب کنیم - چگونه از خطاها به جای عبارات If استفاده کنیم","course_clean_code_learned_5":"چگونه کلاس ها و آبجکت های خود را تمیز نگه داریم و با آنها به روشی تمیز کار کنید - تفاوت بین کلاس ها، آبجکت ها و ساختارهای داده یا کانتینرهای داده","course_clean_code_learned_6":"اصول شی گرایی (SOLID، Low of Demeter)","course_cypress_learned_1":"اصول و مبانی","course_cypress_learned_2":"عمیق تر شدن: نگاهی دقیق تر به Element Selection، Actions و assertions","course_cypress_learned_3":"سازماندهی و پیکربندی تست: Custom Commands و Queries ","course_cypress_learned_4":"کار با Stubs، Spies، Fixtures و دستکاری ساعت","course_cypress_learned_5":"درخواست های HTTP، پایگاه های داده و احراز هویت","course_docker_learned_1":"ایمیج ها و کانتینرهای داکر","course_docker_learned_10":"استقرار Kubernetes","course_docker_learned_2":"درک انواع مختلف داده ها - Volumes و Bind Mounts","course_docker_learned_3":"نتورکینگ در داکر","course_docker_learned_4":"ساخت برنامه های کاربردی چند کانتینری با Docker و Docker Compose","course_docker_learned_5":"کار با Utility Containers و اجرای دستورات در Containers","course_docker_learned_6":"استقرار کانتینرهای داکر","course_docker_learned_7":"Kubernetes و Docker (ارکستراسیون کانتینر مستقل از ارائه دهندگان ابری که ما استفاده می کنیم)","course_docker_learned_8":"معماری کوبرنتیز و مفاهیم اصلی - (Cluster, Pod, WorkerNodes, MasterNode, The Control Plane and Deployments)","course_docker_learned_9":"مدیریت داده ها و ولوم ها با Kubernetes - Kubernetes Networking","course_git_learned_1":"چگونه Git با GitHub کار می کند - Repositories, Branches و Commits","course_git_learned_2":"مدیریت و ترکیب شاخه های Git - درک Stash - حل کانفلیکت ها","course_git_learned_3":"Remote Branches، Remote Tracking Branches و Local Tracking Branches - درک Upstreams","course_git_learned_4":"Collaboration و Contributions - آشنایی با انواع حساب‌های GitHub و Repository ها","course_graphql_learned_1":"GraphQL چیست؟ و چه مشکلی را حل می کند ؟\n(از Over-Fetching و Under-Fetching جلوگیری می کند) \nچگونه داده ها سازماندهی می شوند ؟","course_graphql_learned_2":"کوئری ها و اسکیماها (اسکالر، آرایه و انواع آبجکت ها - ارتباط بین داده ها - ساختار فایل)","course_graphql_learned_3":"میوتیشن چیست؟ (ایجاد، حذف و به روز رسانی داده ها)","course_graphql_learned_4":"بهترین روش ها و قوانین طراحی GraphQL API (تمرکز بر طراحی قوانین و اصولی که باید در هنگام ایجاد یک GraphQL API به کار ببریم و در مورد آنها فکر کنیم - ارجاع به یک آموزش از Shopify)","course_graphql_learned_5":"پروژه با GraphQL، Node و TypeScript - ذخیره سازی پایگاه داده با Prisma V3","\ncourse_graphql_learned_6":"احراز هویت و مجوز دسترسی  در GraphQL","course_graphql_learned_7":"مشکل N + 1 در GraphQL (Caching و Baching با استفاده از DataLoader، Pagination)","course_graphql_learned_8":"اتصال API به React.js با استفاده از Apollo Client (کوری و میوتیشن و ارسال توکن Auth از Frontend)","course_html_css_roocket_learned_1":"HTML، CSS (Flexbox، CSS Grid)","course_js_algorithms_learned_1":"الگوریتم‌های ریاضی - Big O Notation و روش درست تفکر درباره مسائل","course_js_algorithms_learned_2":"الگوریتم های بازگشتی و برنامه نویسی پویا","course_js_algorithms_learned_3":"الگوریتم های جستجو - (خطی و باینری - قضیه اصلی)","course_js_algorithms_learned_4":"الگوریتم های مرتب سازی","course_js_algorithms_learned_5":"\nSpace Complexity","course_js_algorithms_learned_6":"الگوریتم های Sets (Array) ","course_js_algorithms_learned_7":"الگوریتم های پیچیده تر و نحوه حل مسائل برنامه نویسی","course_js_data_structures_learned_1":"ساختارهای داده چیست؟ - (آرایه ها در مقابل Set ها - آبجکت ها در مقابل Map ها - Weak Set و Weak Map ها - کار با Linked List)","course_js_data_structures_learned_2":"کار با فهرست‌ها و جداول - ساختارهای داده استک - صف‌ها - جداول هش - درک Hash Collisions و حل با Chaining و آدرس‌دهی باز","course_js_data_structures_learned_3":"درختان و اصطلاحات اصلی چیست - کار با درختان مختلف (Depth First و Breadth First Search، کار با Binary Search Trees، کار با درختان AVL، کار با Tries)","course_js_data_structures_learned_4":"کار با Priority Queues و Heaps","course_js_data_structures_learned_5":"کار با گراف ها","course_js_roocket_learned_1":"جاوا اسکریپت - ES6، ES7 و ES8","course_js_roocket_learned_2":"دوره آموزشی جاوا اسکریپت مبتنی بر پروژه (پخش کننده ویدئو،برنامه پیانو، درگ و دراپ، اسلایدر، بازی مار، بزرگنمایی تصاویر، اسکرول به بالای صفحه، بارگذاری اولیه و موارد دیگر)","course_js_unit_testing_learned_1":"تنظیم محیط توسعه (Test Runner & Assertion Library)","course_js_unit_testing_learned_2":"مبانی یونیت تست","course_js_unit_testing_learned_3":"الگوی AAA - (Arrange, Act, Assert)","course_js_unit_testing_learned_4":"چه چیزی را تست کنیم؟","course_js_unit_testing_learned_5":"چگونه تست های خوب بنویسیم؟","course_js_unit_testing_learned_6":"Integration Testing","course_js_unit_testing_learned_7":"برقراری تعادل در Unit و Integration تست ","course_js_unit_testing_learned_8":"مفاهیم پیشرفته تست","course_js_unit_testing_learned_9":"Mocking و Spies و Side Effects","course_mern_learned_1":"مفاهیم MERN (چگونه React، NodeJS، Express و MongoDB با هم کار می کنند - روش های مختلف ترکیب آنها)","course_mern_learned_2":"برنامه ریزی یک پروژه MERN (چه کاری در چه زمانی انجام شود)","course_mern_learned_3":"آپلود فایل","course_mern_learned_4":"احراز هویت و مجوز دسترسی","course_mern_learned_5":"توسعه اپلیکیشن","course_microservices_learned_1":"مبانی پیرامون میکروسرویس ها - مشکلات بزرگ داده ها در میکروسرویس ها - استراتژی های ارتباطی بین سرویس ها (Sync and Async)","course_microservices_learned_10":"سرویس کارگر - پیاده سازی یک سرویس انقضا ","course_microservices_learned_11":"CI / CD (GitHub","course_microservices_learned_2":"اجرای سرویس ها با Docker و سازماندهی مجموعه سرویس ها با Kubernetes(Skaffold)","course_microservices_learned_3":"ایجاد یک کتابخانه مرکزی به عنوان یک ماژول NPM برای به اشتراک گذاشتن کد بین سرویس ها - رسیدگی به مسائل همزمانی","course_microservices_learned_4":"مدیریت خطا در برنامه Express.js - مدیریت پایگاه داده و مدل سازی (ایجاد پایگاه داده با Kubernetes)","course_microservices_learned_5":"استراتژی‌های اصلی احراز هویت - سرویس‌های فردی متکی به سرویس احراز هویت هستند (sync) یا می‌دانند چگونه یک کاربر را احراز هویت کنند (async)","course_microservices_learned_6":"تست میکروسرویس ها (محدوده های مختلف تست)","course_microservices_learned_7":"ادغام Next.js در برنامه ","course_microservices_learned_8":"پیاده‌سازی ایونت باس با استفاده از  NATS Streaming Server (اتصال به NATS در Node JS و مدیریت یک کلاینت NATS)","course_microservices_learned_9":"درک جریان ایونت ها و رسیدگی به مسائل همزمانی","course_mongodb_learned_1":"درک اصول اولیه (عملیات CRUD)","course_mongodb_learned_10":"Transactions","course_mongodb_learned_11":"نحوه کار با درایورها و اتصال MongoDB به اپلیکیشن","course_mongodb_learned_12":"MongoDB Stitch چیست و چگونه از آن استفاده کنیم","course_mongodb_learned_2":"روابط اسکیما ها و نحوه ساختاردهی داکیومنت ها","course_mongodb_learned_3":"عمیق تر شدن در غملیات ایجاد، خواندن، به روز رسانی و حذف","course_mongodb_learned_4":"نحوه کار با ایندکس ها","course_mongodb_learned_5":"کار با داده های Geospatial و لوکیشن","course_mongodb_learned_6":"درک Aggregation Framework\n","course_mongodb_learned_7":"کار با داده های عددی (int32, int64, Doubles(64bit) , High Precision Doubles(128bit","course_mongodb_learned_8":"امنیت در مانگو دی بی (Authentication & Authorization, Transport Encryption and Encryption at Rest)","course_mongodb_learned_9":"عملکرد، تحمل خطا و استقرار (تأثیر بر عملکرد،  Capped Collections، Replica Sets، Sharding و توسعه سرور MongoDB)","course_nestjs_grider_learned_1":"اصول اولیه Nest.js","course_nestjs_grider_learned_10":"روابط با TypeORM","course_nestjs_grider_learned_11":"ابزارهای Middleware, Guard, Decorators, and Interceptors چگونه با هم کار می‌کنند و به کدام ترتیب در درخواست اجرا می‌شوند؟","course_nestjs_grider_learned_12":"Query Builders با TypeORM","course_nestjs_grider_learned_2":"اعتبارسنجی داده های درخواست ها با استفاده از Pipes","course_nestjs_grider_learned_3":"معماری Nest.js - چگونه سرویس ها و ریپازیتوری ها با هم کار می کنند","course_nestjs_grider_learned_4":"درک ماژول ها و تزریق وابستگی","course_nestjs_grider_learned_5":"داده های پایدار با Nest.js - (Mongoose, TypeORM و غیره )","course_nestjs_grider_learned_6":"پروژه بزرگ - (شروع با یک API کوچک و اضافه کردن ویژگی های مختلف nest.js)","course_nestjs_grider_learned_7":"\nCustom Data Serialization","course_nestjs_grider_learned_8":"بررسی روش های مختلف احراز هویت و مجوز دسترسی","course_nestjs_grider_learned_9":"Unit Test و Integration Test در Nest.js","course_nestjs_harb_learned_1":"کنترلرها، دکوراتورها و سرویس ها در Nest.js","course_nestjs_harb_learned_2":"افزودن اعتبار سنجی با استفاده از Pipe ها و DTOها (Enum Validation Pipe, Validation The Body with DTOs and Whitelisting Properties Undesired)","course_nestjs_harb_learned_3":"ترنسفورم کردن رسپانس به وسیله ی اینترسپتورها","course_nestjs_harb_learned_4":"پروژه بزرگ - ( ORM Integration، احراز هویت و مجوز دسترسی، میدلور، گارد و اینترسپتورها)","course_nestjs_harb_learned_5":"تست نویسی در Nest.js","course_nextjs_learned_1":"احراز هویت و مجوز با next-auth","course_nextjs_learned_2":"SSG - SSR - ISR - CSR","course_nextjs_learned_3":"آپلود و دانلود فایل","course_nextjs_learned_4":"بهینه سازی برنامه های Nexjs","course_pwa_learned_1":"درک App Manifest و Service Workers","course_pwa_learned_2":"پیاده سازی کش با Service Workers (استاتیک کشینگ، داینامیک کشینگ و کش ورژنینگ)","course_pwa_learned_3":"کشینگ پیشرفته و استراتژی های مختلف کشینگ (Post Request and Cache API, Cache with Network Fallback, Network with Cache Fallback, Cache then Network, Cache then Network Dynamic Caching, Cache then Network with Offline Support, Cache Strategies Routing و غیره)","course_pwa_learned_4":"استفاده از IndexedDB برای کشینگ داینامیک دیتا","course_pwa_learned_5":"Background Synchronization","course_pwa_learned_6":"Web Push Notifications","course_pwa_learned_7":"دسترسی به ویژگی های دستگاه ها","course_pwa_learned_8":"مدیریت Service Workers با Workbox","course_pwa_learned_9":"چگونه React، Vue یا Angular App را به PWA تبدیل کنیم","course_react_native_learned_1":"دیباگ کردن اپلیکیشن های React Native","course_react_native_learned_2":"عمیق شدن در Components, Layouts و Styling - ساخت پروژه کوچک بازی","course_react_native_learned_3":"ایجاد رابط های کاربری تطبیقی (تطبیق با پلتفرم و اندازه دستگاه)","course_react_native_learned_4":"React Navigation","course_react_native_learned_5":"Redux and Context API","course_react_native_learned_6":"مدیریت اینپوت های کاربر","course_react_native_learned_7":"احراز هویت کاربر","course_react_native_learned_8":"استفاده از ویژگی های دستگاه ها (دوربین، لوکیشن و ...)","course_react_native_learned_9":"Push Notifications","courses_learned_title":"چیزی که یاد گرفتم","course_sql_learned_1":"سینتکس و قوانین SQL","course_sql_learned_2":"مدیریت جداول و کار با انواع داده ها","course_sql_learned_3":"عملیات CRUD با SQL","course_sql_learned_4":"دیتا نرمالایز و روابط (تقسیم و پیوستن به داده ها)","course_sql_learned_5":"\nComposite Primary Keys و Composite Foreign Keys","course_sql_learned_6":"روابط Self-Referential","course_sql_learned_7":"توابع Grouping & Aggregate","course_sql_learned_8":"Database Transactions","course_sql_learned_9":"استفاده از ایندکس ها ","courses_title":"دوره های آموزشی","footer_contact":"در تماس باشید","footer_location_text":"ایران / مازندران / بابلسر","footer_send_email_title":"ارسال ایمیل ","hero_section_heading":"سلام ! آروین رمضانی هستم","hero_section_sub_heading_1":"توسعه دهنده وب ReactJS و NodeJS","hero_section_sub_heading_2":"پروژه‌های تمرینی و آموزش های من را می توانید مشاهده کنید","hero_section_sub_heading_3":"با من تماس بگیرید تا در مورد پروژه بعدی خود صحبت کنیم","projects_desc_animals_house":"من روی یک پروژه تمرینی MERN کار کردم که بر ثبت نام و احراز هویت با استفاده از accessToken و refreshToken تمرکز داشت، که accessToken پس از 180 ثانیه منقضی می‌شود. من همچنین از react-hook-form و yup برای اعتبارسنجی فرم سمت کلاینت استفاده کردم. برای بهبود تجربه کاربر، من از skeleton را پیاده‌سازی کردم و از styled-components برای کتابخانه UI استفاده کردم. برای انیمیشن‌ها، از framer-motion استفاده کردم. استفاده از redux-thunk در redux-toolkit را یاد گرفتن و همچنین یاد گرفتم که چگونه داده ها را با استفاده از searchQueryParams دریافت کنم.","projects_desc_pizza_shop":"این یک پروژه تمرینی است که من پس از تماشای <a href=\"https://www.udemy.com/course/nextjs-react-the-complete-guide/\" target=\"_bland\">دوره NextJS Academind Course</a> ایجاد کردم تا آنچه را که در این دوره یاد گرفتم تمرین کنم. (آپلود فایل، احراز هویت و مجوز، اعتبار سنجی فرم با استفاده از react-hook-form و yup).<br /> از next-ath برای احراز هویت استفاده کردم.<br /> چیزهای زیادی در مورد framer-motion و نحوه کارکرد آن با styled-components برای ایجاد کامپوننت های قابل استفاده مجدد آموختم.<br /> قبلاً با redux-toolkit آشنا بودم اما از RTK Query استفاده نکرده بودم. من در این پروژه استفاده از آن را در NextJS تمرین کردم، همچنین نحوه کار با Map API (Mapbox) را تمرین کردم.","projects_desc_realtor_app":"این یک پروژه تمرینی از <a\n  href=\"https://www.udemy.com/course/the-nest-js-bootcamp-complete-developer-guide/\"\n  target=\"_blank\"\n><strong>The Nest JS Bootcamp -  Complete Developer Guide</strong> است. یک API ساده از برنامه Realtor مانند</a> <a\n  href=\"https://www.realtor.com\"\n  target=\"_blank\"\n>Realtor.com</a> است که در آن کاربران می توانند به عنوان مشاور املاک ثبت نام کنند تا خانه های خود را نشان دهند و بفروشند، و سایر کاربران به عنوان خریداران می توانند برای خرید خانه مورد نظر به مشاور املاک پیام ارسال کنند.<br /> این برنامه بسیار ساده بوده اما در مورد بخش‌های مختلف چارچوب NestJS مانند: ORM Integration، Middleware، Interceptors، Guards، Decorators، Param Decorators، Testing Integration و غیره چیزهای زیادی را آموزش می‌دهد.<br /> من همچنین Swagger را که برای داکیومنت سازی API است یاد گرفتم و به آن اضافه کردم.\n","projects_desc_watch_shop":"این یک پروژه تمرینی MERN است که در آن من بر پیاده سازی ثتب نام و احراز هویت با accessToken و refreshToken تمرکز کردم. برای بهبود رابط کاربری، من از react-hook-form و yup برای اعتبارسنجی فرم استفاده کردم و از Material-ui برای کتابخانه UI استفاده کردم، پیاده سازی یک سبد خرید با redux-toolkit را تمرین کردم، با کار بر روی این پروژه، تجربه خوبی در توسعه یک برنامه وب با ویژگی های احراز هویت و مجوز کاربر به دست آوردم.","projects_title":"پروژه های من","projects_video_modal_notice_problem":"اگر IDM (Internet Download Manager) را روی سیستم خود نصب کرده اید، ممکن است سعی کند ویدیو را به صورت خودکار دانلود کند و از نمایش صحیح ویدیو توسط مرورگر جلوگیری کند!","projects_video_modal_notice_solution":"می توانید روی دکمه لغو در IDM کلیک کرده و گزینه Cancel auto downloading from this site را انتخاب کنید.","skill_name_nextjs":"NextJS","skill_name_nodejs":"NodeJS","skills_title":"مهارت ها"}